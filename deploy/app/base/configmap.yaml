apiVersion: v1
kind: ConfigMap
metadata:
  name: shopware-config
  namespace: shopware
data:
  APP_ENV: "dev"
  APP_URL: "https://shop.delta4x4.dev"
  BLUE_GREEN_DEPLOYMENT: "0"
  INSTANCE_ID: "YDCrBocYLgAb1ef3Yv31e2fnicLiOpXw"
  STOREFRONT_PROXY_URL: "https://shop.delta4x4.dev"
  # ElasticSearch
  SHOPWARE_ES_ENABLED: "1"
  SHOPWARE_ES_INDEXING_ENABLED: "1"
  SHOPWARE_ES_INDEX_PREFIX: "sw"
  SHOPWARE_ES_THROW_EXCEPTION: "1"
  # HTTP Cache
  SHOPWARE_HTTP_CACHE_ENABLED: "0"
  SHOPWARE_HTTP_DEFAULT_TTL: "7200"
  # OpenTelemetry
  OTEL_EXPORTER_OTLP_ENDPOINT: "http://opentelemetry-collector:4317"
  OTEL_EXPORTER_OTLP_PROTOCOL: "grpc"
  OTEL_LOGS_EXPORTER: "otlp"
  OTEL_METRICS_EXPORTER: "otlp"
  OTEL_PHP_AUTOLOAD_ENABLED: "true"
  OTEL_PHP_DISABLED_INSTRUMENTATIONS: ""
  OTEL_SERVICE_NAME: "shopware"
  OTEL_TRACES_EXPORTER: "otlp"
  # S3
  S3_PUBLIC_BUCKET: "shop-cdn-beta"
  S3_PRIVATE_BUCKET: "shop-private"
  S3_REGION: "auto"
  S3_CDN_URL: "https://shop.cdn.beta.delta4x4.dev"
  S3_ENDPOINT: "https://b4887c6c0e759a65b6c9219d829c3887.r2.cloudflarestorage.com"
  S3_USE_PATH_STYLE_ENDPOINT: "true"
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-config
  namespace: shopware
data:
  nginx.conf: |
    daemon              off;
    user                nginx;
    worker_processes    auto;
    pcre_jit            on;

    error_log  /proc/self/fd/2  warn;
    pid        /tmp/nginx.pid;

    events {
        use                  epoll;
        worker_connections   1024;
        multi_accept on;
    }

    http {
        include       mime.types;
        default_type  application/octet-stream;

        log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                          '$status $body_bytes_sent "$http_referer" '
                          '"$http_user_agent" "$http_x_forwarded_for"';

        log_format json_combined escape=json
        '{'
            '"time_local":"$time_local",'
            '"remote_addr":"$remote_addr",'
            '"remote_user":"$remote_user",'
            '"request":"$request",'
            '"status": "$status",'
            '"body_bytes_sent":"$body_bytes_sent",'
            '"request_time":"$request_time",'
            '"http_referrer":"$http_referer",'
            '"http_user_agent":"$http_user_agent"'
            '"http_x_forwarded_for":"$http_x_forwarded_for"'
        '}';


        access_log /proc/self/fd/1 json_combined;

        server_tokens off;
        charset utf-8;

        sendfile         on;
        tcp_nopush       on;
        tcp_nodelay      on;

        # compression
        gzip on;
        gzip_disable "msie6";

        gzip_vary on;
        gzip_proxied any;
        gzip_comp_level 6;
        gzip_buffers 16 8k;
        gzip_http_version 1.1;
        gzip_min_length 256;
        gzip_types text/plain text/css application/json application/x-javascript text/xml application/xml application/xml+rss text/javascript application/vnd.ms-fontobject application/x-font-ttf font/opentype image/svg+xml image/x-icon;

        # request settings
        client_header_timeout  3m;
        client_body_timeout    3m;
        send_timeout           3m;

        client_max_body_size 8M;
        client_header_buffer_size    1k;
        large_client_header_buffers  4 4k;

        keepalive_timeout 65;
        include /etc/nginx/http.d/*.conf;

        # temporary files
        client_body_temp_path /tmp/client_body_temp;
        proxy_temp_path /tmp/proxy_temp;
        fastcgi_temp_path /tmp/fastcgi_temp;
        uwsgi_temp_path /tmp/uwsgi_temp;
        scgi_temp_path /tmp/scgi_temp;
    }
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-shopware-config
  namespace: shopware
data:
  shopware.conf: |
    server {
        listen 8000 default_server;
        listen [::]:8000 default_server;
        server_name _;

        root /var/www/html/public;
        index index.php;

        client_max_body_size 128M;

        location = /sitemap.xml {
            log_not_found off;
            access_log off;
            try_files $uri /;
        }

        location = /robots.txt {
            log_not_found off;
            access_log off;
            try_files $uri /;
        }

        # make status pages available locally or from within VPC/private network
        location ~ ^/-/fpm/(status|ping)$ {
            include fastcgi.conf;
            allow 127.0.0.1;
            allow 172.16.0.0/12;
            allow 10.0.0.0/8;
            deny all;
            fastcgi_pass unix:/run/php/php-fpm.sock;
        }

        # Deny access to . (dot) files
        location ~ /\. {
            deny all;
        }

        # Deny access to .php files in public directories
        location ~ ^/(theme|media|thumbnail|bundles|css|fonts|js|recovery|sitemap)/ {
            expires 1y;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
            log_not_found off;
            tcp_nodelay off;
            open_file_cache max=3000 inactive=120s;
            open_file_cache_valid 45s;
            open_file_cache_min_uses 2;
            open_file_cache_errors off;

            location ~* ^.+\.svg {
                add_header Content-Security-Policy "script-src 'none'";
                add_header Cache-Control "public, must-revalidate, proxy-revalidate";
                log_not_found off;
            }
        }

        location ~* ^.+\.(?:css|cur|js|jpe?g|gif|ico|png|svg|webp|html|woff|woff2|xml)$ {
            expires 1y;
            add_header Cache-Control "public, must-revalidate, proxy-revalidate";
            access_log off;

            # The directive enables or disables messages in error_log about files not found on disk.
            log_not_found off;
            tcp_nodelay off;

            ## Set the OS file cache.
            open_file_cache max=3000 inactive=120s;
            open_file_cache_valid 45s;
            open_file_cache_min_uses 2;
            open_file_cache_errors off;

            try_files $uri /index.php$is_args$args;
        }

        location ~* ^.+\.svg$ {
            add_header Content-Security-Policy "script-src 'none'";
        }

        location / {
            try_files $uri /index.php$is_args$args;
        }

        location ~ \.php$ {
            fastcgi_split_path_info ^(.+\.php)(/.+)$;
            include fastcgi.conf;
            #fastcgi_param SERVER_PORT "443";
            #fastcgi_param HTTPS "on";
            #fastcgi_param HTTP_PROXY "";
            fastcgi_index index.php;
            fastcgi_buffers 8 16k;
            fastcgi_buffer_size 32k;
            fastcgi_read_timeout 300s;
            proxy_connect_timeout 15s;
            proxy_send_timeout 300s;
            proxy_read_timeout 300s;
            send_timeout 300s;
            client_body_buffer_size 128k;
            fastcgi_pass unix:/run/php/php-fpm.sock;
        }
}
