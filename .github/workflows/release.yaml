name: "Release"

on:
  workflow_dispatch:
  repository_dispatch:
    types: [release]
  pull_request:
    branches:
      - "main"

permissions:
  contents: write
  pull-requests: write

defaults:
  run:
    shell: bash

concurrency:
  group: "${{ github.workflow }}@${{ github.event.pull_request.head.label || github.head_ref || github.ref }}"

jobs:
  release:
    runs-on: ubuntu-latest
    env:
      GH_TOKEN: ${{ secrets.ACCESS_TOKEN }}
    outputs:
      published: ${{ steps.semantic-release.outputs.new_release_published }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Generate Release artifacts
        run: |
          make bundle

      - name: Semantic Release
        id: semantic-release
        uses: cycjimmy/semantic-release-action@v4
        with:
          semantic_version: 24
          branches: |
            [
              'main',
              'next'
            ]
          extra_plugins: |
            @semantic-release/changelog@6.0.3
            @semantic-release/git@10.0.1
            conventional-changelog-conventionalcommits@8.0.0

  images:
    runs-on: ubuntu-latest
    needs: [release]
    if: ${{ needs.release.outputs.published }}
    env:
      GITHUB_TOKEN: "${{ secrets.ACCESS_TOKEN }}"
    permissions:
      packages: write
      id-token: write
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Create .env
        run: |
          make dotenv

      - name: Create Shopware execution environment
        uses: hoverkraft-tech/compose-action@v2.0.1
        with:
          compose-file: "./compose-ci.yml"

      - name: Docker metadata
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ghcr.io/fmjstudios/shopware
          tags: |
            type=semver,prefix=v,pattern={{version}}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3.2.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ env.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6
        with:
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
