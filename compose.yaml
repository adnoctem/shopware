# this file only includes the images and configurations for Shopware itself
# see the `include` statement at the bottom of the file for the other components
services:
  shopware-init:
    image: adnoctem/shopware:0.0.1
    container_name: shopware-init
    env_file: .env
    # uncomment for debugging
    # entrypoint: [ "tail", "-f", "/dev/null" ]
    command:
      - setup
    restart: no
    volumes:
      - sw-docroot:/var/www/html:rw
    networks:
      - internal
    labels:
      - "application=shopware"
      - "traefik.enable=false"
    depends_on:
      mysql:
        condition: service_started
      opensearch:
        condition: service_started
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started

  shopware:
    image: adnoctem/shopware:0.0.1
    container_name: shopware
    env_file: .env
    restart: unless-stopped
    volumes:
      - sw-docroot:/var/www/html:rw
      - sw-fpm-sock:/run/php:rw
    networks:
      - internal
    labels:
      - "application=shopware"
      - "traefik.enable=false"
    depends_on:
      shopware-init:
        condition: service_completed_successfully
      nginx:
        condition: service_started
      traefik:
        condition: service_started
      mysql:
        condition: service_started
      opensearch:
        condition: service_started
      mailpit:
        condition: service_started
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started

  message-worker:
    image: adnoctem/shopware:0.0.1
    # container_name: shopware-message-worker
    env_file: .env
    command: [ "bin/console", "messenger:consume", "--time-limit=360", "--memory-limit=512M", "async", "low_priority" ]
    restart: unless-stopped
    volumes:
      - sw-docroot:/var/www/html:rw
    networks:
      - internal
    labels:
      - "application=shopware-message-worker"
      - "traefik.enable=false"
    deploy:
      replicas: 3
    depends_on:
      shopware-init:
        condition: service_completed_successfully
      mysql:
        condition: service_started
      opensearch:
        condition: service_started
      mailpit:
        condition: service_started
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started

  cron-worker:
    image: adnoctem/shopware:0.0.1
    # container_name: shopware-cron-worker
    env_file: .env
    command: [ "bin/console", "scheduled-task:run", "--no-wait" ]
    restart: unless-stopped
    volumes:
      - sw-docroot:/var/www/html:rw
    networks:
      - internal
    labels:
      - "application=shopware-cron-worker"
      - "traefik.enable=false"
    depends_on:
      shopware-init:
        condition: service_completed_successfully
      mysql:
        condition: service_started
      opensearch:
        condition: service_started
      mailpit:
        condition: service_started
      redis:
        condition: service_started
      rabbitmq:
        condition: service_started

volumes:
  sw-docroot:
  sw-fpm-sock:
  db-data:
  opensearch-data:
  tempo-data:
  rabbitmq-data:
  redis-data:

networks:
  public:
    external: true
  internal:

include:
  - path:
      - deploy/docker/compose.base.yaml
    # - deploy/docker/overrides/compose.base.yaml apply an override
  - path:
      - deploy/docker/compose.traefik.yaml
  - path:
      - deploy/docker/compose.monitoring.yaml
