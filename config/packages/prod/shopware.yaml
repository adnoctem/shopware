# Using the web-updater would overwrite this file, requiring a second file z-shopware.yaml to override the config
# We toggled the updater with `shopware.auto_update.enabled = false`

shopware:
  # Public files: product images, thumbnails, category images, etc.
  filesystem:
    public:
      url: "%env(SHOPWARE_S3_CDN_URL)%"
      type: "amazon-s3"
      visibility: "public"
      config:
        bucket: "%env(SHOPWARE_S3_BUCKET)%"
        region: "%env(SHOPWARE_S3_REGION)%"
        endpoint: "%env(SHOPWARE_S3_ENDPOINT)%"
        use_path_style_endpoint: "%env(bool:SHOPWARE_S3_USE_PATH_ENDPOINT)%"
        options:
          visibility: "public"
          credentials:
            key: "%env(SHOPWARE_S3_ACCESS_KEY)%"
            secret: "%env(SHOPWARE_S3_SECRET_KEY)%"

    # Private files: invoices, delivery notes, etc.
    # NOTE: omit URL here, since they shouldn't be publicly accessible
    private:
      type: "amazon-s3"
      visibility: "private"
      config:
        bucket: "%env(SHOPWARE_S3_BUCKET)%"
        region: "%env(SHOPWARE_S3_REGION)%"
        endpoint: "%env(SHOPWARE_S3_ENDPOINT)%"
        use_path_style_endpoint: "%env(bool:SHOPWARE_S3_USE_PATH_ENDPOINT)%"
        options:
          visibility: "public"
          credentials:
            key: "%env(SHOPWARE_S3_ACCESS_KEY)%"
            secret: "%env(SHOPWARE_S3_SECRET_KEY)%"

    # Theme configuration
    theme:
      url: "%env(SHOPWARE_S3_CDN_URL)%"
      type: "amazon-s3"
      visibility: "public"
      config:
        bucket: "%env(SHOPWARE_S3_BUCKET)%"
        region: "%env(SHOPWARE_S3_REGION)%"
        endpoint: "%env(SHOPWARE_S3_ENDPOINT)%"
        use_path_style_endpoint: "%env(bool:SHOPWARE_S3_USE_PATH_ENDPOINT)%"
        options:
          visibility: "public"
          credentials:
            key: "%env(SHOPWARE_S3_ACCESS_KEY)%"
            secret: "%env(SHOPWARE_S3_SECRET_KEY)%"
    asset:
      url: "%env(SHOPWARE_S3_CDN_URL)%"
      type: "amazon-s3"
      visibility: "public"
      config:
        bucket: "%env(SHOPWARE_S3_BUCKET)%"
        region: "%env(SHOPWARE_S3_REGION)%"
        endpoint: "%env(SHOPWARE_S3_ENDPOINT)%"
        use_path_style_endpoint: "%env(bool:SHOPWARE_S3_USE_PATH_ENDPOINT)%"
        options:
          visibility: "public"
          credentials:
            key: "%env(SHOPWARE_S3_ACCESS_KEY)%"
            secret: "%env(SHOPWARE_S3_SECRET_KEY)%"
    sitemap:
      url: "%env(SHOPWARE_S3_CDN_URL)%"
      type: "amazon-s3"
      visibility: "public"
      config:
        bucket: "%env(SHOPWARE_S3_BUCKET)%"
        region: "%env(SHOPWARE_S3_REGION)%"
        endpoint: "%env(SHOPWARE_S3_ENDPOINT)%"
        use_path_style_endpoint: "%env(bool:SHOPWARE_S3_USE_PATH_ENDPOINT)%"
        options:
          visibility: "public"
          credentials:
            key: "%env(SHOPWARE_S3_ACCESS_KEY)%"
            secret: "%env(SHOPWARE_S3_SECRET_KEY)%"

  api:
    # Configure rate-limiting for all admin-facing endpoints
    rate_limiter:
      # Storefront (customer-facing) endpoints
      login:
        enabled: false
      guest_login:
        enabled: false
      reset_password:
        enabled: false
      contact_form:
        enabled: false
      # API/Administration logins
      oauth:
        enabled: true
        policy: "time_backoff"
        reset: "24 hours"
        limits:
          - limit: 5
            interval: "10 seconds"
          - limit: 10
            interval: "60 seconds"
      # Administration user password recovery
      user_recovery:
        enabled: true
        policy: "time_backoff"
        reset: "24 hours"
        limits:
          - limit: 3
            interval: "10 seconds"
          - limit: 5
            interval: "60 seconds"
