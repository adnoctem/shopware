#!/usr/bin/env sh

# shellcheck disable=SC3040
set -o errexit -o nounset -o pipefail

COMPLETED_DATE=$(date '+%Y-%m-%dT%H:%M:%S+00.00')

# ----------------------
#   'lib' functions
# ----------------------

# logging
log() {
    echo "[$(date '+%d-%m-%Y_%T')] $(basename "${0}"): $@"
}

# Run commands within the built-in PHP console
php_console() {
    php -derror_reporting=E_ALL bin/console "$@"
}

# Check that the database connection available
database_connection_check() {
  echo "|--------------------------------------------------------------|"
  echo "|       Checking for an active MySQL/MariaDB connection        |"
  echo "|--------------------------------------------------------------|"

  # shellcheck disable=SC2086
  database_host=${DATABASE_HOST:-""}
  database_port="${DATABASE_PORT:-}"
  tries=0

  until nc -z -w$(( "$DATABASE_TIMEOUT" + 20 )) -v "$database_host" "${database_port:-3306}"
  do
    log "Waiting ${DATABASE_TIMEOUT:-120} seconds for database connection to become available"
    sleep 1
    tries=$(( tries + 1 ))

    if [ "$tries" -eq "${DATABASE_TIMEOUT}" ]; then
      log "FATAL: Could not connect to database within timeout of ${tries} seconds. Exiting."
      exit 1
    fi
  done
}

# Install all Shopware 6 extensions
shopware_install_extensions() {
  list_with_updates=$(php bin/console plugin:list --json | jq 'map(select(.installedAt == null)) | .[].name' -r)

  for plugin in $list_with_updates; do
    log "INFO: Installing Shopware 6 plugin: ${plugin}"
    php_console plugin:install --activate "$plugin"
  done
}

# Update all Shopware 6 extensions
shopware_update_extensions() {
  list_with_updates=$(php bin/console plugin:list --json | jq 'map(select(.upgradeVersion != null)) | .[].name' -r)

  for plugin in $list_with_updates; do
    log "INFO: Updating Shopware 6 plugin: ${plugin}"
    php_console plugin:update "$plugin"
  done
}


# ----------------------
#   'help' usage function
# ----------------------
ctl_usage() {
  echo
  echo "Usage: $(basename "${0}") <COMMAND>"
  echo
  echo "init    - Initialize the Shopware 6 instance"
  echo "start   - Start the supervisord process"
  echo "run     - Run Shopware 6 (init & start)"
  echo "help    - Print this usage information"
  echo ""
}

# ----------------------
#   'init' function
# ----------------------
ctl_init() {
  is_installed=$(php_console system:is-installed)

  if [ ! "${is_installed}" ]; then
    log "INFO: Installing Shopware 6 from scratch..."
    php_console system:install --create-database "--shop-locale=${INSTALL_LOCALE}" "--shop-currency=${INSTALL_CURRENCY}" --force
    php_console user:crate "${INSTALL_ADMIN_USERNAME}" --admin --password="${INSTALL_ADMIN_PASSWORD}" -n
    php_console sales-channel:create:storefront --name=Storefront --url="${APP_URL}"
    php_console theme:change --all Storefront
    php_console system:config:set core.frw.completedAt "${COMPLETED_DATE}"
    php_console plugin:refresh

    shopware_install_extensions
  else
    log "INFO: Running Shopware 6 shop..."
    if [ "${SHOPWARE_SKIP_ASSET_COPY-""}" ]; then
      php_console system:update:finish --skip-asset-build
    else
      php_console system:update:finish
    fi

    if [ "${SHOPWARE_SKIP_ASSET_COPY-""}" ]; then
      php_console plugin:update:all
    else
      php_console plugin:update:all --skip-asset-build
    fi

    shopware_install_extensions
  fi
}

# ----------------------
#   'start' function
# ----------------------
ctl_start() {
  /usr/bin/supervisord -c /etc/supervisor/supervisord.conf
}

# --------------------------------
#   MAIN
# --------------------------------
main() {
  cmd=${1}

  case "${cmd}" in
  init)
    ctl_init
    return $?
    ;;
  start)
    ctl_start
    return $?
    ;;
  run)
    ctl_init
    ctl_start
    return $?
    ;;
  *)
    log::red "Unknown command: ${cmd}. See 'help' command for usage information:"
    hosts::usage
    return 1
    ;;
  esac
}

# ------------
# 'main' call
# ------------
main "$@"