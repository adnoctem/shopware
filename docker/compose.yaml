services:
  mysql:
    image: mysql:${MYSQL_VERSION:-8.0}-oracle
    container_name: mysql
    restart: always
    ports:
      - "3306:3306"
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE:-shopware}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-shopware}
      MYSQL_USER: ${MYSQL_USER:-shopware}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-shopware}
    volumes:
      - db-data:/var/lib/mysql:rw
    labels:
      - "application=mysql"
    healthcheck:
      test: [ "CMD", "mysqladmin" ,"ping", "-h", "127.0.0.1", "-uroot", "-p${MYSQL_ROOT_PASSWORD:-shopware}" ]
      interval: 5s
      timeout: 5s
      retries: 20

  # ref: https://opensearch.org/docs/latest/install-and-configure/install-opensearch/docker/#sample-docker-composeyml
  opensearch:
    image: opensearchproject/opensearch:2
    container_name: opensearch
    ports:
      - "9200:9200" # REST API
      - "9600" # Performance Analyzer
    environment:
      OPENSEARCH_INITIAL_ADMIN_PASSWORD: "AShopware6Password!"
      discovery.type: single-node
      plugins.security.disabled: true
      OPENSEARCH_JAVA_OPTS: "-Xms512m -Xmx512m"
    volumes:
      - opensearch-data:/usr/share/opensearch/data
    labels:
      - "application=opensearch"
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile:
        soft: 65536
        hard: 65536

  # ref: https://opensearch.org/docs/latest/install-and-configure/install-opensearch/docker/#sample-docker-composeyml
  opensearch-dashboards:
    image: opensearchproject/opensearch-dashboards:2
    container_name: opensearch-dashboards
    ports:
      - "5601:5601"
    environment:
      OPENSEARCH_HOSTS: '["http://opensearch:9200"]'
      DISABLE_SECURITY_DASHBOARDS_PLUGIN: true
      opensearch.username: shopware
      opensearch.password: shopware
    labels:
      - "application=opensearch-dashboards"

  # ref: https://mailpit.axllent.org/docs/configuration/runtime-options/
  mailpit:
    image: axllent/mailpit
    container_name: mailpit
    ports:
      - "1025:1025"
      - "8025:8025"
    environment:
      MP_SMTP_AUTH_ACCEPT_ANY: 1
      MP_SMTP_AUTH_ALLOW_INSECURE: 1
    labels:
      - "application=mailpit"

  # Jaeger
  jaeger:
    image: jaegertracing/all-in-one:1.60
    container_name: jeager
    restart: always
    ports:
      - "16686:16686"
      - "14268"
      - "14250"

  # Zipkin
  #  zipkin:
  #    image: openzipkin/zipkin:latest
  #    container_name: zipkin
  #    environment:
  #      - JAVA_OPTS=-Xms1024m -Xmx1024m -XX:+ExitOnOutOfMemoryError
  #    restart: always
  #    ports:
  #      - "9411:9411"

  # Grafana
  grafana:
    image: grafana/grafana:11.2.0
    container_name: grafana
    deploy:
      resources:
        limits:
          memory: 100M
    restart: unless-stopped
    environment:
      - "GF_INSTALL_PLUGINS=grafana-opensearch-datasource"
    configs:
      - source: grafana.ini
        target: /etc/grafana/grafana.ini
    ports:
      - "3000:3000"

  # Collector
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.110.0
    container_name: otel-collector
    restart: always
    command: [ "--config=/etc/otel-collector-config.yaml" ]
    configs:
      - source: otel-collector-config.yaml
        target: /etc/otel-collector-config.yaml
    ports:
      - "1888:1888"   # pprof extension
      - "8888:8888"   # Prometheus metrics exposed by the collector
      - "8889:8889"   # Prometheus exporter metrics
      - "13133:13133" # health_check extension
      - "4317:4317"   # OTLP gRPC receiver
      - "55679:55679" # zpages extension
    depends_on:
      - jaeger

  prometheus:
    container_name: prometheus
    image: prom/prometheus:v2.54.1
    restart: always
    configs:
      - source: otel-collector-config.yaml
        target: /etc/prometheus/prometheus.yml
    command:
      - --web.console.templates=/etc/prometheus/consoles
      - --web.console.libraries=/etc/prometheus/console_libraries
      - --storage.tsdb.retention.time=1h
      - --config.file=/etc/prometheus/prometheus.yaml
      - --storage.tsdb.path=/prometheus
      - --web.enable-lifecycle
      - --web.route-prefix=/
      - --enable-feature=exemplar-storage
      - --enable-feature=otlp-write-receiver
    ports:
      - "9090:9090"

volumes:
  db-data:
  opensearch-data:

configs:
  grafana.ini:
    file: resources/grafana.ini
  otel-collector-config.yaml:
    file: resources/otel-collector-config.yaml
  prometheus.yaml:
    file: resources/prometheus.yaml
